{"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101205953/src/manager.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101205953/src/manager.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":11},"end":{"line":5,"column":24}},"4":{"start":{"line":6,"column":14},"end":{"line":6,"column":30}},"5":{"start":{"line":23,"column":19},"end":{"line":23,"column":56}},"6":{"start":{"line":24,"column":8},"end":{"line":25,"column":38}},"7":{"start":{"line":25,"column":12},"end":{"line":25,"column":38}},"8":{"start":{"line":26,"column":8},"end":{"line":32,"column":9}},"9":{"start":{"line":27,"column":12},"end":{"line":27,"column":71}},"10":{"start":{"line":28,"column":12},"end":{"line":28,"column":67}},"11":{"start":{"line":31,"column":12},"end":{"line":31,"column":64}},"12":{"start":{"line":40,"column":8},"end":{"line":46,"column":9}},"13":{"start":{"line":41,"column":12},"end":{"line":41,"column":49}},"14":{"start":{"line":42,"column":12},"end":{"line":42,"column":67}},"15":{"start":{"line":45,"column":12},"end":{"line":45,"column":64}},"16":{"start":{"line":57,"column":8},"end":{"line":72,"column":9}},"17":{"start":{"line":58,"column":25},"end":{"line":58,"column":67}},"18":{"start":{"line":59,"column":22},"end":{"line":59,"column":51}},"19":{"start":{"line":60,"column":23},"end":{"line":60,"column":72}},"20":{"start":{"line":61,"column":12},"end":{"line":62,"column":40}},"21":{"start":{"line":62,"column":16},"end":{"line":62,"column":40}},"22":{"start":{"line":63,"column":12},"end":{"line":64,"column":38}},"23":{"start":{"line":64,"column":16},"end":{"line":64,"column":38}},"24":{"start":{"line":65,"column":12},"end":{"line":66,"column":40}},"25":{"start":{"line":66,"column":16},"end":{"line":66,"column":40}},"26":{"start":{"line":67,"column":12},"end":{"line":67,"column":71}},"27":{"start":{"line":68,"column":12},"end":{"line":68,"column":68}},"28":{"start":{"line":71,"column":12},"end":{"line":71,"column":64}},"29":{"start":{"line":79,"column":19},"end":{"line":79,"column":21}},"30":{"start":{"line":80,"column":8},"end":{"line":80,"column":69}},"31":{"start":{"line":81,"column":8},"end":{"line":102,"column":11}},"32":{"start":{"line":82,"column":12},"end":{"line":82,"column":28}},"33":{"start":{"line":83,"column":25},"end":{"line":83,"column":61}},"34":{"start":{"line":84,"column":22},"end":{"line":84,"column":51}},"35":{"start":{"line":85,"column":12},"end":{"line":101,"column":13}},"36":{"start":{"line":87,"column":20},"end":{"line":87,"column":52}},"37":{"start":{"line":88,"column":20},"end":{"line":88,"column":26}},"38":{"start":{"line":90,"column":20},"end":{"line":90,"column":49}},"39":{"start":{"line":91,"column":20},"end":{"line":91,"column":26}},"40":{"start":{"line":93,"column":20},"end":{"line":93,"column":50}},"41":{"start":{"line":94,"column":20},"end":{"line":94,"column":26}},"42":{"start":{"line":96,"column":20},"end":{"line":96,"column":51}},"43":{"start":{"line":97,"column":20},"end":{"line":97,"column":26}},"44":{"start":{"line":99,"column":20},"end":{"line":99,"column":66}},"45":{"start":{"line":100,"column":20},"end":{"line":100,"column":26}},"46":{"start":{"line":103,"column":8},"end":{"line":103,"column":20}},"47":{"start":{"line":111,"column":8},"end":{"line":134,"column":9}},"48":{"start":{"line":112,"column":25},"end":{"line":112,"column":67}},"49":{"start":{"line":113,"column":22},"end":{"line":113,"column":51}},"50":{"start":{"line":114,"column":12},"end":{"line":130,"column":13}},"51":{"start":{"line":116,"column":20},"end":{"line":116,"column":75}},"52":{"start":{"line":117,"column":20},"end":{"line":117,"column":26}},"53":{"start":{"line":119,"column":20},"end":{"line":119,"column":72}},"54":{"start":{"line":120,"column":20},"end":{"line":120,"column":26}},"55":{"start":{"line":122,"column":20},"end":{"line":122,"column":73}},"56":{"start":{"line":123,"column":20},"end":{"line":123,"column":26}},"57":{"start":{"line":125,"column":20},"end":{"line":125,"column":74}},"58":{"start":{"line":126,"column":20},"end":{"line":126,"column":26}},"59":{"start":{"line":128,"column":20},"end":{"line":128,"column":66}},"60":{"start":{"line":129,"column":20},"end":{"line":129,"column":26}},"61":{"start":{"line":133,"column":12},"end":{"line":133,"column":64}},"62":{"start":{"line":137,"column":0},"end":{"line":137,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":14,"column":21}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":34},"end":{"line":33,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":24},"end":{"line":47,"column":5}},"line":39},"3":{"name":"(anonymous_3)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":53},"end":{"line":73,"column":5}},"line":56},"4":{"name":"(anonymous_4)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":15},"end":{"line":104,"column":5}},"line":78},"5":{"name":"(anonymous_5)","decl":{"start":{"line":81,"column":44},"end":{"line":81,"column":45}},"loc":{"start":{"line":81,"column":54},"end":{"line":102,"column":9}},"line":81},"6":{"name":"(anonymous_6)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":22},"end":{"line":135,"column":5}},"line":110}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":25,"column":38}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":25,"column":38}},{"start":{"line":24,"column":8},"end":{"line":25,"column":38}}],"line":24},"1":{"loc":{"start":{"line":26,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":32,"column":9}},{"start":{"line":26,"column":8},"end":{"line":32,"column":9}}],"line":26},"2":{"loc":{"start":{"line":40,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":46,"column":9}},{"start":{"line":40,"column":8},"end":{"line":46,"column":9}}],"line":40},"3":{"loc":{"start":{"line":57,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":72,"column":9}},{"start":{"line":57,"column":8},"end":{"line":72,"column":9}}],"line":57},"4":{"loc":{"start":{"line":61,"column":12},"end":{"line":62,"column":40}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":62,"column":40}},{"start":{"line":61,"column":12},"end":{"line":62,"column":40}}],"line":61},"5":{"loc":{"start":{"line":63,"column":12},"end":{"line":64,"column":38}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":64,"column":38}},{"start":{"line":63,"column":12},"end":{"line":64,"column":38}}],"line":63},"6":{"loc":{"start":{"line":65,"column":12},"end":{"line":66,"column":40}},"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":66,"column":40}},{"start":{"line":65,"column":12},"end":{"line":66,"column":40}}],"line":65},"7":{"loc":{"start":{"line":85,"column":12},"end":{"line":101,"column":13}},"type":"switch","locations":[{"start":{"line":86,"column":16},"end":{"line":88,"column":26}},{"start":{"line":89,"column":16},"end":{"line":91,"column":26}},{"start":{"line":92,"column":16},"end":{"line":94,"column":26}},{"start":{"line":95,"column":16},"end":{"line":97,"column":26}},{"start":{"line":98,"column":16},"end":{"line":100,"column":26}}],"line":85},"8":{"loc":{"start":{"line":111,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":134,"column":9}},{"start":{"line":111,"column":8},"end":{"line":134,"column":9}}],"line":111},"9":{"loc":{"start":{"line":114,"column":12},"end":{"line":130,"column":13}},"type":"switch","locations":[{"start":{"line":115,"column":16},"end":{"line":117,"column":26}},{"start":{"line":118,"column":16},"end":{"line":120,"column":26}},{"start":{"line":121,"column":16},"end":{"line":123,"column":26}},{"start":{"line":124,"column":16},"end":{"line":126,"column":26}},{"start":{"line":127,"column":16},"end":{"line":129,"column":26}}],"line":114}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":15,"6":15,"7":1,"8":15,"9":14,"10":14,"11":1,"12":15,"13":14,"14":14,"15":1,"16":2,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":5,"33":5,"34":5,"35":5,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":6,"48":5,"49":5,"50":5,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1},"f":{"0":1,"1":15,"2":15,"3":2,"4":1,"5":5,"6":6},"b":{"0":[1,14],"1":[14,1],"2":[14,1],"3":[1,1],"4":[1,0],"5":[1,0],"6":[1,0],"7":[1,1,1,1,1],"8":[5,1],"9":[1,1,1,1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101205953/src/manager.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101205953/src/manager.ts"],"names":[],"mappings":"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","sourcesContent":["import {intManager} from \"./intManager\";\nimport {Notes} from \"./notes\";\nimport * as fs from 'fs';\nimport * as chalk from 'chalk';\n\n/**\n * Class that represents a note manager\n */\nexport class Manager implements intManager {\n    /**\n     * Creates a new manager instance\n     */\n    constructor() {}\n\n    /**\n     * Adds a new note to the user's folder\n     * @param title Title of the note\n     * @param body Body of the note\n     * @param color Color of the note\n     * @param user User name\n     */\n    add(title: string, body: string, color: string, user: string): void {\n      let note: Notes = new Notes(title, body, color);\n      if(fs.existsSync(`./${user}`) == false) fs.mkdirSync(`./${user}`);\n      if(fs.existsSync(`./${user}/${title}.json`) == false) {\n        fs.writeFileSync(`./${user}/${title}.json`, note.toJSON());\n        console.log(chalk.green('Note successfully created!'));\n      } else {\n        console.log(chalk.red('This note already exists!'));\n      }\n    }\n\n    /**\n     * Removes a note from the user's folder\n     * @param user User name\n     * @param title Title of the note\n     */\n    remove(user: string, title: string): void {\n      if(fs.existsSync(`./${user}/${title}.json`) == true) {\n        fs.rmSync(`./${user}/${title}.json`);\n        console.log(chalk.green('Note successfully deleted!'));\n      } else {\n        console.log(chalk.red('This note doesn\\'t exist!'));\n      }\n    }\n\n    /**\n     * Modifies a note from the user's folder\n     * @param user User name\n     * @param title Title of the note\n     * @param newTitle New title for the note\n     * @param newBody New body of the note\n     * @param newColor New color of the note\n     */\n    modify(user: string, title: string, newTitle: string, newBody: string, newColor: string): void {\n      if(fs.existsSync(`./${user}/${title}.json`) == true) {\n        let buffer = fs.readFileSync(`./${user}/${title}.json`);\n        let obj = JSON.parse(buffer.toString());\n        let note: Notes = new Notes(obj.title, obj.body, obj.color);\n        if(newTitle !== '') note.setTitle(newTitle);\n        if(newBody !== '') note.setBody(newBody);\n        if(newColor !== '') note.setColor(newColor);\n        fs.writeFileSync(`./${user}/${title}.json`, note.toJSON());\n        console.log(chalk.green('Note successfully modified!'));\n      } else {\n          console.log(chalk.red('This note doesn\\'t exist!'));\n      }\n    }\n\n    /**\n     * List all notes for the specified user\n     * @param user User name\n     */\n    list(user: string): string[] {\n      let list: string[] = [];\n      console.log(chalk.magenta.underline(\"\\nCurrent filenames:\"));\n      fs.readdirSync(`./${user}`).forEach((file) => {\n          list.push(file);\n          let buffer = fs.readFileSync(`./${user}/${file}`);\n          let obj = JSON.parse(buffer.toString());\n          switch (obj.color) {\n            case 'yellow':\n              console.log(chalk.yellow(file));\n            break;\n            case 'red':\n              console.log(chalk.red(file));\n            break;\n            case 'blue':\n              console.log(chalk.blue(file));\n            break;\n            case 'green':\n              console.log(chalk.green(file));\n            break;\n            default:\n              console.log(chalk.red('Color not available'));\n              break;\n          }\n      });\n      return list;\n    }\n\n    /**\n     * Reads a specific note if it exists\n     * @param user User name\n     * @param title Title of the note\n     */\n    read(user: string, title: string): void {\n      if(fs.existsSync(`./${user}/${title}.json`) == true) {\n          let buffer = fs.readFileSync(`./${user}/${title}.json`);\n          let obj = JSON.parse(buffer.toString());\n          switch (obj.color) {\n            case 'yellow':\n              console.log(chalk.yellow(`${obj.title}\\n${obj.body}`));\n            break;\n            case 'red':\n              console.log(chalk.red(`${obj.title}\\n${obj.body}`));\n            break;\n            case 'blue':\n              console.log(chalk.blue(`${obj.title}\\n${obj.body}`));\n            break;\n            case 'green':\n              console.log(chalk.green(`${obj.title}\\n${obj.body}`));\n            break;\n            default:\n              console.log(chalk.red('Color not available'));\n              break;\n          }\n      } else {\n          console.log(chalk.red('This note doesn\\'t exist!'));\n      }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"60bf61a0285a59e23095496c27e61de10498dfd0","contentHash":"298cfbcd80bba3966ce1028b10bdfb0ea1269d87a027f14fae0b6f992dfcd89f"},"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101205953/src/notes.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101205953/src/notes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":27}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":26}},"6":{"start":{"line":31,"column":8},"end":{"line":31,"column":25}},"7":{"start":{"line":38,"column":8},"end":{"line":38,"column":26}},"8":{"start":{"line":44,"column":8},"end":{"line":44,"column":30}},"9":{"start":{"line":50,"column":8},"end":{"line":50,"column":28}},"10":{"start":{"line":56,"column":8},"end":{"line":56,"column":30}},"11":{"start":{"line":63,"column":8},"end":{"line":63,"column":127}},"12":{"start":{"line":66,"column":0},"end":{"line":66,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":36},"end":{"line":18,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":15},"end":{"line":25,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":14},"end":{"line":32,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":15},"end":{"line":39,"column":5}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":23},"end":{"line":45,"column":5}},"line":43},"5":{"name":"(anonymous_5)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":21},"end":{"line":51,"column":5}},"line":49},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":23},"end":{"line":57,"column":5}},"line":55},"7":{"name":"(anonymous_7)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":13},"end":{"line":64,"column":5}},"line":62}},"branchMap":{},"s":{"0":1,"1":1,"2":17,"3":17,"4":17,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":16,"12":1},"f":{"0":17,"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":16},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101205953/src/notes.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101205953/src/notes.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,KAAK;IACd;;;;;OAKG;IACH,YAAmB,KAAa,EAAS,IAAY,EAAS,KAAa;QAAxD,UAAK,GAAL,KAAK,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;IAAG,CAAC;IAE/E;;;OAGG;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,OAAO;QACH,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,QAAgB;QACrB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,OAAe;QACnB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;IACxB,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,QAAgB;QACrB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,MAAM;QACF,OAAO,kBAAkB,GAAG,IAAI,CAAC,KAAK,GAAG,mBAAmB,GAAG,IAAI,CAAC,IAAI,GAAG,oBAAoB,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IAC3H,CAAC;CACJ;AA7DD,sBA6DC","sourcesContent":["import {intNotes} from \"./intNotes\";\n\n/**\n * Class that represents a note\n */\nexport class Notes implements intNotes {\n    /**\n     * Creates a new note instance\n     * @param title Title of the note\n     * @param body Body of the note\n     * @param color Color of the note\n     */\n    constructor(public title: string, public body: string, public color: string) {}\n\n    /**\n     * Obtains the note title\n     * @returns Title of the note\n     */\n    getTitle() {\n        return this.title;\n    }\n\n    /**\n     * Obtains the note body\n     * @returns Body of the note\n     */\n    getBody() {\n        return this.body;\n    }\n\n    /**\n     * Obtains the note color\n     * @returns Color of the note\n     */\n    getColor() {\n        return this.color;\n    }\n\n    /**\n     * Sets a new title to an existing note\n     */\n    setTitle(newTitle: string) {\n        this.title = newTitle;\n    }\n\n    /**\n     * Sets a new body to an existing note\n     */\n    setBody(newBody: string) {\n        this.body = newBody;\n    }\n\n    /**\n     * Sets a new color to an existing note\n     */\n    setColor(newColor: string) {\n        this.color = newColor;\n    }\n\n    /**\n     * Converts a note attributes into a JSON formatted string\n     * @returns A JSON formatted string\n     */\n    toJSON(): string {\n        return '{\\n\\\"title\\\": \\\"' + this.title + '\\\",\\n\\\"body\\\": \\\"' + this.body + '\\\",\\n\\\"color\\\": \\\"' + this.color + '\\\"\\n}';\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9031e18de27e430cfd622c93b5ecf9c1a7f535b8","contentHash":"adb34805b98c463db4bffbe5910c9c8a1ae9babb5fa08337dd18258c269f4ecd"}}